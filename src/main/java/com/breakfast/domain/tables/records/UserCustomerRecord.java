/**
 * This class is generated by jOOQ
 */
package com.breakfast.domain.tables.records;

/**
 * This class is generated by jOOQ.
 *
 * 用户详情
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserCustomerRecord extends org.jooq.impl.UpdatableRecordImpl<com.breakfast.domain.tables.records.UserCustomerRecord> implements org.jooq.Record8<java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.sql.Timestamp, java.lang.String, java.lang.String, java.lang.String> {

	private static final long serialVersionUID = -1632647303;

	/**
	 * Setter for <code>breakfast.t_bf_user_customer.user_id</code>.
	 */
	public void setUserId(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>breakfast.t_bf_user_customer.user_id</code>.
	 */
	public java.lang.String getUserId() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>breakfast.t_bf_user_customer.customer_level</code>. 客户等级
	 */
	public void setCustomerLevel(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>breakfast.t_bf_user_customer.customer_level</code>. 客户等级
	 */
	public java.lang.String getCustomerLevel() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>breakfast.t_bf_user_customer.credits</code>. 小黄豆数量
	 */
	public void setCredits(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>breakfast.t_bf_user_customer.credits</code>. 小黄豆数量
	 */
	public java.lang.Integer getCredits() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>breakfast.t_bf_user_customer.referrer</code>. 推荐人
	 */
	public void setReferrer(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>breakfast.t_bf_user_customer.referrer</code>. 推荐人
	 */
	public java.lang.String getReferrer() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>breakfast.t_bf_user_customer.recommend_time</code>. 推荐时间
	 */
	public void setRecommendTime(java.sql.Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>breakfast.t_bf_user_customer.recommend_time</code>. 推荐时间
	 */
	public java.sql.Timestamp getRecommendTime() {
		return (java.sql.Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>breakfast.t_bf_user_customer.address1</code>. 常用地址1
	 */
	public void setAddress1(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>breakfast.t_bf_user_customer.address1</code>. 常用地址1
	 */
	public java.lang.String getAddress1() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>breakfast.t_bf_user_customer.address2</code>. 常用地址2
	 */
	public void setAddress2(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>breakfast.t_bf_user_customer.address2</code>. 常用地址2
	 */
	public java.lang.String getAddress2() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>breakfast.t_bf_user_customer.address3</code>. 常用地址3
	 */
	public void setAddress3(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>breakfast.t_bf_user_customer.address3</code>. 常用地址3
	 */
	public java.lang.String getAddress3() {
		return (java.lang.String) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.String> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.sql.Timestamp, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.sql.Timestamp, java.lang.String, java.lang.String, java.lang.String> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return com.breakfast.domain.tables.UserCustomer.UserCustomer.userId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return com.breakfast.domain.tables.UserCustomer.UserCustomer.customerLevel;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return com.breakfast.domain.tables.UserCustomer.UserCustomer.credits;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return com.breakfast.domain.tables.UserCustomer.UserCustomer.referrer;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field5() {
		return com.breakfast.domain.tables.UserCustomer.UserCustomer.recommendTime;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return com.breakfast.domain.tables.UserCustomer.UserCustomer.address1;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return com.breakfast.domain.tables.UserCustomer.UserCustomer.address2;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return com.breakfast.domain.tables.UserCustomer.UserCustomer.address3;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getCustomerLevel();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getCredits();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getReferrer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value5() {
		return getRecommendTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getAddress1();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getAddress2();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return getAddress3();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserCustomerRecord value1(java.lang.String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserCustomerRecord value2(java.lang.String value) {
		setCustomerLevel(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserCustomerRecord value3(java.lang.Integer value) {
		setCredits(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserCustomerRecord value4(java.lang.String value) {
		setReferrer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserCustomerRecord value5(java.sql.Timestamp value) {
		setRecommendTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserCustomerRecord value6(java.lang.String value) {
		setAddress1(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserCustomerRecord value7(java.lang.String value) {
		setAddress2(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserCustomerRecord value8(java.lang.String value) {
		setAddress3(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserCustomerRecord values(java.lang.String value1, java.lang.String value2, java.lang.Integer value3, java.lang.String value4, java.sql.Timestamp value5, java.lang.String value6, java.lang.String value7, java.lang.String value8) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserCustomerRecord
	 */
	public UserCustomerRecord() {
		super(com.breakfast.domain.tables.UserCustomer.UserCustomer);
	}

	/**
	 * Create a detached, initialised UserCustomerRecord
	 */
	public UserCustomerRecord(java.lang.String userId, java.lang.String customerLevel, java.lang.Integer credits, java.lang.String referrer, java.sql.Timestamp recommendTime, java.lang.String address1, java.lang.String address2, java.lang.String address3) {
		super(com.breakfast.domain.tables.UserCustomer.UserCustomer);

		setValue(0, userId);
		setValue(1, customerLevel);
		setValue(2, credits);
		setValue(3, referrer);
		setValue(4, recommendTime);
		setValue(5, address1);
		setValue(6, address2);
		setValue(7, address3);
	}
}
